---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tempo
  namespace: observability
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/version: "2.6.0"
    app.kubernetes.io/component: server
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tempo-config
  namespace: observability
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/version: "2.6.0"
    app.kubernetes.io/component: server
data:
  tempo.yaml: |
    server:
      http_listen_port: 3200
      grpc_listen_port: 9095
      log_level: info

    distributor:
      receivers:
        otlp:
          protocols:
            grpc:
              endpoint: 0.0.0.0:4317
            http:
              endpoint: 0.0.0.0:4318
        jaeger:
          protocols:
            thrift_compact:
              endpoint: 0.0.0.0:6831
            thrift_binary:
              endpoint: 0.0.0.0:6832
            thrift_http:
              endpoint: 0.0.0.0:14268
            grpc:
              endpoint: 0.0.0.0:14250
        zipkin:
          endpoint: 0.0.0.0:9411

    ingester:
      max_block_duration: 5m               # cut the headblock when this much time passes
      max_block_bytes: 1_000_000           # cut the headblock when it hits this size (bytes)
      complete_block_timeout: 10m          # flush an incomplete block after this much time passes
      lifecycler:
        ring:
          kvstore:
            store: inmemory
          replication_factor: 1

    compactor:
      compaction:
        compaction_window: 1h              # blocks in this time window will be compacted together
        max_block_bytes: 100_000_000       # maximum size of compacted blocks
        block_retention: 1h
        compacted_block_retention: 10m

    querier:
      frontend_worker:
        frontend_address: tempo-query-frontend:9095

    query_frontend:
      search:
        duration_slo: 5s
        throughput_bytes_slo: 1.073741824e+09
      trace_by_id:
        duration_slo: 5s

    storage:
      trace:
        backend: local                     # backend configuration to use
        wal:
          path: /tmp/tempo/wal             # where to store the wal locally
        local:
          path: /tmp/tempo/blocks
        pool:
          max_workers: 100                 # worker pool determines the number of parallel requests to the object store backend
          queue_depth: 10000

    usage_report:
      reporting_enabled: false

    # Configure tracing for Tempo itself
    tracing:
      enabled: true
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: tempo
  namespace: observability
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/version: "2.6.0"
    app.kubernetes.io/component: server
spec:
  serviceName: tempo-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: tempo
      app.kubernetes.io/instance: tempo
      app.kubernetes.io/component: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tempo
        app.kubernetes.io/instance: tempo
        app.kubernetes.io/component: server
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: tempo
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
      containers:
        - name: tempo
          image: grafana/tempo:2.6.0
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/tempo/tempo.yaml
            - -target=all
          ports:
            - name: http-metrics
              containerPort: 3200
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: otlp-grpc
              containerPort: 4317
              protocol: TCP
            - name: otlp-http
              containerPort: 4318
              protocol: TCP
            - name: jaeger-compact
              containerPort: 6831
              protocol: UDP
            - name: jaeger-binary
              containerPort: 6832
              protocol: UDP
            - name: jaeger-http
              containerPort: 14268
              protocol: TCP
            - name: jaeger-grpc
              containerPort: 14250
              protocol: TCP
            - name: zipkin
              containerPort: 9411
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/tempo
            - name: storage
              mountPath: /tmp/tempo
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 256Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
      volumes:
        - name: config
          configMap:
            name: tempo-config
  volumeClaimTemplates:
    - metadata:
        name: storage
        labels:
          app.kubernetes.io/name: tempo
          app.kubernetes.io/instance: tempo
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---
# Query Frontend Deployment (for distributed traces search)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tempo-query-frontend
  namespace: observability
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/version: "2.6.0"
    app.kubernetes.io/component: query-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: tempo
      app.kubernetes.io/instance: tempo
      app.kubernetes.io/component: query-frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: tempo
        app.kubernetes.io/instance: tempo
        app.kubernetes.io/component: query-frontend
    spec:
      serviceAccountName: tempo
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
      containers:
        - name: query-frontend
          image: grafana/tempo:2.6.0
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/tempo/tempo.yaml
            - -target=query-frontend
          ports:
            - name: http-metrics
              containerPort: 3200
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/tempo
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 50m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
      volumes:
        - name: config
          configMap:
            name: tempo-config
---
apiVersion: v1
kind: Service
metadata:
  name: tempo-headless
  namespace: observability
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/version: "2.6.0"
    app.kubernetes.io/component: server
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http-metrics
      port: 3200
      protocol: TCP
      targetPort: http-metrics
  selector:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/component: server
---
apiVersion: v1
kind: Service
metadata:
  name: tempo
  namespace: observability
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/version: "2.6.0"
    app.kubernetes.io/component: server
spec:
  type: ClusterIP
  ports:
    - name: http-metrics
      port: 3200
      protocol: TCP
      targetPort: http-metrics
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: grpc
    - name: otlp-grpc
      port: 4317
      protocol: TCP
      targetPort: otlp-grpc
    - name: otlp-http
      port: 4318
      protocol: TCP
      targetPort: otlp-http
    - name: jaeger-compact
      port: 6831
      protocol: UDP
      targetPort: jaeger-compact
    - name: jaeger-binary
      port: 6832
      protocol: UDP
      targetPort: jaeger-binary
    - name: jaeger-http
      port: 14268
      protocol: TCP
      targetPort: jaeger-http
    - name: jaeger-grpc
      port: 14250
      protocol: TCP
      targetPort: jaeger-grpc
    - name: zipkin
      port: 9411
      protocol: TCP
      targetPort: zipkin
  selector:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/component: server
---
apiVersion: v1
kind: Service
metadata:
  name: tempo-query-frontend
  namespace: observability
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/version: "2.6.0"
    app.kubernetes.io/component: query-frontend
spec:
  type: ClusterIP
  ports:
    - name: http-metrics
      port: 3200
      protocol: TCP
      targetPort: http-metrics
    - name: grpc
      port: 9095
      protocol: TCP
      targetPort: grpc
  selector:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/component: query-frontend
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: tempo
  namespace: observability
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/version: "2.6.0"
    app.kubernetes.io/component: server
spec:
  endpoints:
  - interval: 15s
    port: http-metrics
    path: /metrics
  selector:
    matchLabels:
      app.kubernetes.io/name: tempo
      app.kubernetes.io/instance: tempo
      app.kubernetes.io/component: server
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: tempo-query-frontend
  namespace: observability
  labels:
    app.kubernetes.io/name: tempo
    app.kubernetes.io/instance: tempo
    app.kubernetes.io/version: "2.6.0"
    app.kubernetes.io/component: query-frontend
spec:
  endpoints:
  - interval: 15s
    port: http-metrics
    path: /metrics
  selector:
    matchLabels:
      app.kubernetes.io/name: tempo
      app.kubernetes.io/instance: tempo
      app.kubernetes.io/component: query-frontend

